<div>
<div class="container mt-5" style="padding-left: 5%">
<h2>{{name}}</h2>
<hr>
<div class="toolbar">
        <form class="col-lg-4 mb-3 mb-lg-0 me-lg-3" role="search" onsubmit="(e)=>{e.preventDefault()}">
            <input type="search" class="form-control" placeholder="Search..." id='keyword' aria-label="Search" oninput="search(this.value)" required>
        </form>

        <select id="methodSelect" class="form-select" aria-label="Default select example" onchange="filterByMethod(this.value)">
            <option selected>Hình Thức</option>
            <option value="1">Cổ Động Chính Trị</option>
            <option value="2">Quảng Cáo Thương Mại</option>
            <option value="3">Xã Hội Hoá</option>
        </select>
        <select id="statusSelect" class="form-select" aria-label="Default select example" onchange="filterByStatus(this.value)">
            <option selected>Trạng Thái</option>
            <option value="1">Đang chờ duyệt</option>
            <option value="2">Đang quảng cáo</option>
            <option value="3">Đã cấp phép</option>
            <option value="4">Đã hủy</option>
        </select>
    </div>
    <hr>
  <table class="table table-striped table-hover table-bordered rounded-table">
    <thead>
      <tr>
        {{#each heading}}
          <th scope="col">{{this}}</th>
        {{/each}}
      </tr>
    </thead>
    <tbody>
      {{#each row}}
        {{> row}}
      {{/each}}
    </tbody>
  </table>
</div>
</div>

<script>
  function search(keyword) {
  const rows = document.querySelectorAll('#tableBody tr');
  const filter = keyword.toUpperCase();
  rows.forEach(row => {
    let found = false;
    row.querySelectorAll('td').forEach(cell => {
      if (cell.textContent.toUpperCase().includes(filter)) {
        found = true;
      }
    });
    if (found) {
      row.style.display = '';
    } else {
      row.style.display = 'none';
    }
  });
}
  function filterByType(typeFilter) {
    filter(typeFilter);
  }
  function filterByMethod(methodFilter) {
    filter(undefined, methodFilter);
  }
  function filterByStatus(statusFilter) {
    filter(undefined, undefined, statusFilter);
  }
  function filter(typeFilter, methodFilter, statusFilter) {
    const rows = document.querySelectorAll('#tableBody tr');
    rows.forEach(row => {
      const type = row.querySelector('.type-column').textContent.toUpperCase();
      const method = row.querySelector('.method-column').textContent.toUpperCase();
      const status = row.querySelector('.status-column').textContent.toUpperCase();
      const typeMatch = type.includes(typeFilter) || !typeFilter;
      const methodMatch = method.includes(methodFilter) || !methodFilter;
      const statusMatch = status.includes(statusFilter) || !statusFilter;
      if (typeMatch && methodMatch && statusMatch) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  }
</script>